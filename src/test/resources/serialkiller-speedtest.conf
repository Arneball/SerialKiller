<?xml version="1.0" encoding="UTF-8"?>
	<!-- serialkiller.conf -->
	<config>
	  <refresh>6000</refresh>
	  <mode>
	    <!-- set to 'false' for blocking mode -->
	    <profiling>false</profiling>
	  </mode>
	  <!-- if you're changing the logging settings, restart your app -->
	  <logging>
	    <enabled>false</enabled>
	    <logfile>C:\\Users\\sbt-savkin-mv\\SoftInstall\\serialkiller.log</logfile>
	  </logging>
	  <blacklist>
		<regexps>
			<!-- ysoserial's JBossInterceptors1, JavassistWeld1 payload -->
			<regexp>org\.jboss\.(weld\.)?interceptor\.builder\.InterceptionModelBuilder$</regexp>
			<regexp>org\.jboss\.(weld\.)?interceptor\.builder\.MethodReference$</regexp>
			<regexp>org\.jboss\.(weld\.)?interceptor\.proxy\.DefaultInvocationContextFactory$</regexp>
			<regexp>org\.jboss\.(weld\.)?interceptor\.proxy\.InterceptorMethodHandler$</regexp>
			<regexp>org\.jboss\.(weld\.)?interceptor\.reader\.ClassMetadataInterceptorReference$</regexp>
			<regexp>org\.jboss\.(weld\.)?interceptor\.reader\.DefaultMethodMetadata$</regexp>
			<regexp>org\.jboss\.(weld\.)?interceptor\.reader\.ReflectiveClassMetadata$</regexp>
			<regexp>org\.jboss\.(weld\.)?interceptor\.reader\.SimpleInterceptorMetadata$</regexp>
			<regexp>org\.jboss\.(weld\.)?interceptor\.spi\.instance\.InterceptorInstantiator$</regexp>
			<regexp>org\.jboss\.(weld\.)?interceptor\.spi\.metadata\.InterceptorReference$</regexp>
			<regexp>org\.jboss\.(weld\.)?interceptor\.spi\.metadata\.MethodMetadata$</regexp>
			<regexp>org\.jboss\.(weld\.)?interceptor\.spi\.model\.InterceptionModel$</regexp>
			<regexp>org\.jboss\.(weld\.)?interceptor\.spi\.model\.InterceptionType$</regexp>
			<!-- ysoserial's MozillaRhino1 payload -->
			<regexp>org\.mozilla\.javascript\..*$</regexp>
		</regexps>
		<list>
			<!-- ysoserial's BeanShell1 payload  -->
			<name>bsh.XThis</name>
			<name>bsh.Interpreter</name>
			<!-- ysoserial's C3P0 payload  -->
			<name>com.mchange.v2.c3p0.impl.PoolBackedDataSourceBase</name>
			<!-- ysoserial's CommonsBeanutils1 payload  -->
			<name>org.apache.commons.beanutils.BeanComparator</name>
			<!-- ysoserial's CommonsCollections1,3,5,6 payload  -->
			<name>org.apache.commons.collections.Transformer</name>
			<name>org.apache.commons.collections.functors.InvokerTransformer</name>
			<name>org.apache.commons.collections.functors.ChainedTransformer</name>
			<name>org.apache.commons.collections.functors.ConstantTransformer</name>
			<name>org.apache.commons.collections.functors.InstantiateTransformer</name>
			<!-- ysoserial's CommonsCollections2,4 payload  -->
			<name>org.apache.commons.collections4.functors.InvokerTransformer</name>
			<name>org.apache.commons.collections4.functors.ChainedTransformer</name>
			<name>org.apache.commons.collections4.functors.ConstantTransformer</name>
			<name>org.apache.commons.collections4.functors.InstantiateTransformer</name>
			<name>org.apache.commons.collections4.comparators.TransformingComparator</name>
			<!-- ysoserial's FileUpload1,Wicket1 payload  -->
			<name>org.apache.commons.fileupload.disk.DiskFileItem</name>
			<name>org.apache.wicket.util.upload.DiskFileItem</name>
			<!-- ysoserial's Groovy payload  -->
			<name>org.codehaus.groovy.runtime.ConvertedClosure</name>
			<name>org.codehaus.groovy.runtime.MethodClosure</name>
			<!-- ysoserial's Hibernate1,2 payload  -->
			<name>org.hibernate.engine.spi.TypedValue</name>
			<name>org.hibernate.tuple.component.AbstractComponentTuplizer</name>
			<name>org.hibernate.tuple.component.PojoComponentTuplizer</name>
			<name>org.hibernate.type.AbstractType</name>
			<name>org.hibernate.type.ComponentType</name>
			<name>org.hibernate.type.Type</name>
			<name>com.sun.rowset.JdbcRowSetImpl</name>
			<!-- ysoserial's JRMPClient payload  -->
			<name>java.rmi.registry.Registry</name>
			<name>java.rmi.server.ObjID</name>
			<name>java.rmi.server.RemoteObjectInvocationHandler</name>
			<!-- ysoserial's JSON1 payload  -->
			<name>net.sf.json.JSONObject</name>
			<!-- ysoserial's Jdk7u21 payload -->
			<name>javax.xml.transform.Templates</name>
			<!-- ysoserial's Jython1 payload -->
			<name>org.python.core.PyObject</name>
			<name>org.python.core.PyBytecode</name>
			<name>org.python.core.PyFunction</name>
			<!-- ysoserial's Myfaces1,2 payload  -->
			<name>org.apache.myfaces.context.servlet.FacesContextImpl</name>
			<name>org.apache.myfaces.context.servlet.FacesContextImplBase</name>
			<name>org.apache.myfaces.el.CompositeELResolver</name>
			<name>org.apache.myfaces.el.unified.FacesELContext</name>
			<name>org.apache.myfaces.view.facelets.el.ValueExpressionMethodExpression</name>
			<!-- ysoserial's ROME payload  -->
			<name>com.sun.syndication.feed.impl.ObjectBean</name>
			<!-- ysoserial's Spring1,2 payload  -->
			<name>org.springframework.beans.factory.ObjectFactory</name>
			<name>org.springframework.core.SerializableTypeWrapperMethodInvokeTypeProvider</name>
			<name>org.springframework.aop.framework.AdvisedSupport</name>
			<name>org.springframework.aop.target.SingletonTargetSource</name>
			<name>org.springframework.aop.framework.JdkDynamicAopProxy</name>
			<name>org.springframework.core.SerializableTypeWrapperTypeProvider</name>
			<!-- other trigger gadgets or payloads -->
			<name>java.util.PriorityQueue</name>
			<name>java.lang.reflect.Proxy</name>
			<name>javax.management.MBeanServerInvocationHandler</name>
			<name>javax.management.openmbean.CompositeDataInvocationHandler</name>
			<name>org.springframework.aop.framework.JdkDynamicAopProxy</name>
			<name>java.beans.EventHandler</name>
			<name>java.util.Comparator</name>
			<name>org.reflections.Reflections</name>
		</list>
	  </blacklist>
	  <whitelist>
	    <regexps>
	        <regexp>.*</regexp>
	    </regexps>
	  </whitelist>
	</config>


